If you want to execute a certain command only if a previous commmand didn't
fail you can use the double ampersand "&&" operator:

>> wget http://www.gnu.org/software/grep/manual/grep.txt && less grep.txt

Although this looks very similar to

>> wget http://www.gnu.org/software/grep/manual/grep.txt; less grep.txt

it has the advantage that if wget fails to fetch the file that the second
command doen't get executed. By running the following examples you will 
clearly see the differences:

>> wget foo.bar/bar.txt;   less bar.txt
>> wget foo.bar/bar.txt && less bar.txt

The latter one will output less erros and is more safe. Since it could be
that if a previous command fails, all the following ones will misbehave.
In the best case they will only fail. In the worst case they will erase
your most important files (Another reason to have regulary backups!!).

Another operator to connect to commands is the double pipe "||". It works
exactely the opposite way "&&" does. The command after "||" is only executed
if the previous command failed:

>> echo 1 || echo 2
1
>> echo 1 && echo 2
1
2

This is useful to display a custom error message if the previous command
failed:

>> wget foo.bar/bar.txt 2> /dev/null || echo "Could not download"

Note that we used "2>" mute the wget command otherwise it would output its
own error message.
